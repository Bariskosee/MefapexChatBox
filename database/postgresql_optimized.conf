# ðŸš€ MEFAPEX PostgreSQL Optimized Configuration
# ===============================================
# Production-optimized PostgreSQL settings for MEFAPEX ChatBox

# CONNECTION SETTINGS
# ===================
listen_addresses = '*'
port = 5432
max_connections = 200
superuser_reserved_connections = 3

# MEMORY SETTINGS
# ===============
shared_buffers = 256MB                    # 25% of RAM (for 1GB RAM)
effective_cache_size = 1GB                # 75% of available RAM
work_mem = 4MB                            # Per connection working memory
maintenance_work_mem = 64MB               # Maintenance operations
dynamic_shared_memory_type = posix
huge_pages = try

# WRITE AHEAD LOG (WAL) SETTINGS
# ===============================
wal_level = replica
wal_buffers = 16MB
checkpoint_completion_target = 0.9
checkpoint_timeout = 15min
max_wal_size = 4GB
min_wal_size = 1GB
archive_mode = off                        # Enable for backup

# QUERY PLANNER SETTINGS
# ======================
random_page_cost = 1.1                   # SSD optimized (default 4.0)
effective_io_concurrency = 200           # SSD parallel I/O
seq_page_cost = 1.0
cpu_tuple_cost = 0.01
cpu_index_tuple_cost = 0.005
cpu_operator_cost = 0.0025
default_statistics_target = 100          # Better query planning

# LOGGING SETTINGS
# ================
logging_collector = on
log_destination = 'stderr'
log_min_duration_statement = 1000        # Log queries > 1 second
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_statement = 'none'
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

# AUTOVACUUM SETTINGS
# ===================
autovacuum = on
autovacuum_max_workers = 3
autovacuum_naptime = 20s
autovacuum_vacuum_threshold = 50
autovacuum_analyze_threshold = 50
autovacuum_vacuum_scale_factor = 0.1
autovacuum_analyze_scale_factor = 0.05
autovacuum_vacuum_cost_delay = 10ms
autovacuum_vacuum_cost_limit = 1000

# BACKGROUND WRITER SETTINGS
# ===========================
bgwriter_delay = 200ms
bgwriter_lru_maxpages = 100
bgwriter_lru_multiplier = 2.0
bgwriter_flush_after = 512kB

# CLIENT CONNECTION DEFAULTS
# ===========================
timezone = 'UTC'
lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'
default_text_search_config = 'pg_catalog.turkish'

# LOCK MANAGEMENT
# ===============
deadlock_timeout = 1s
max_locks_per_transaction = 64
max_pred_locks_per_transaction = 64

# REPLICATION SETTINGS (for future use)
# ======================================
max_wal_senders = 3
max_replication_slots = 3
hot_standby = on
hot_standby_feedback = off

# PERFORMANCE MONITORING
# ======================
track_activities = on
track_counts = on
track_io_timing = on
track_functions = all
stats_temp_directory = 'pg_stat_tmp'

# EXTENSION SETTINGS
# ==================
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.max = 10000
pg_stat_statements.track = all

# ERROR REPORTING AND LOGGING
# ============================
log_min_messages = warning
log_min_error_statement = error
log_duration = off
log_statement = 'none'
log_hostname = off

# TURKISH LANGUAGE SUPPORT
# =========================
# These settings optimize for Turkish content
default_text_search_config = 'pg_catalog.turkish'
lc_collate = 'tr_TR.UTF-8'
lc_ctype = 'tr_TR.UTF-8'

# MEMORY OPTIMIZATION FOR AI WORKLOADS
# =====================================
# Specific optimizations for AI model serving
temp_buffers = 8MB                       # Temporary table operations
max_prepared_transactions = 0            # Disable if not using 2PC
synchronous_commit = on                  # Data safety over performance
fsync = on                              # Ensure data integrity
full_page_writes = on                   # Crash recovery safety

# CONNECTION POOLING OPTIMIZATION
# ================================
# These work with PgBouncer or application-level pooling
tcp_keepalives_idle = 600               # 10 minutes
tcp_keepalives_interval = 30            # 30 seconds
tcp_keepalives_count = 3                # 3 probes

# ADVANCED PERFORMANCE TUNING
# ============================
enable_hashagg = on
enable_hashjoin = on
enable_indexscan = on
enable_indexonlyscan = on
enable_material = on
enable_mergejoin = on
enable_nestloop = on
enable_seqscan = on
enable_sort = on
enable_tidscan = on

# COST-BASED OPTIMIZATION
# =======================
# Fine-tuned for SSD and modern hardware
seq_page_cost = 1.0
random_page_cost = 1.1
cpu_tuple_cost = 0.01
cpu_index_tuple_cost = 0.005
cpu_operator_cost = 0.0025
parallel_tuple_cost = 0.1
parallel_setup_cost = 1000.0

# PARALLEL QUERY SETTINGS
# ========================
max_parallel_workers_per_gather = 2
max_parallel_workers = 4
parallel_leader_participation = on
min_parallel_table_scan_size = 8MB
min_parallel_index_scan_size = 512kB

# JIT COMPILATION (PostgreSQL 11+)
# =================================
jit = on
jit_above_cost = 100000
jit_inline_above_cost = 500000
jit_optimize_above_cost = 500000

# SECURITY SETTINGS
# =================
ssl = off                               # Enable in production with certificates
password_encryption = scram-sha-256
row_security = on

# LOCALE AND FORMATTING
# =====================
datestyle = 'iso, mdy'
intervalstyle = 'postgres'
timezone = 'UTC'

# MAINTENANCE
# ===========
vacuum_cost_delay = 0                  # No delay for vacuum operations
vacuum_cost_page_hit = 1
vacuum_cost_page_miss = 10
vacuum_cost_page_dirty = 20
vacuum_cost_limit = 200

# END OF CONFIGURATION
# ====================
